html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent;color:inherit;text-decoration:none}a,a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0}pre,textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}legend,ol,td,th,ul{padding:0}body{font-family:"Arial",sans-serif;font-weight:400;line-height:1.4;color:#000;text-rendering:optimizeLegibility;-webkit-font-feature-settings:"kern" 1,"liga" 1,"calt" 1,"pnum" 1,"tnum" 0,"onum" 0,"lnum" 0,"dlig" 0;font-feature-settings:"kern" 1,"liga" 1,"calt" 1,"pnum" 1,"tnum" 0,"onum" 0,"lnum" 0,"dlig" 0}.like-h1,.like-h2,.like-h3,.like-h4,.like-h5,.like-h6,h1,h2,h3,h4,h5,h6{font-family:"Arial",sans-serif;line-height:1.2;font-weight:700;margin:1.5em 0 .8em}a[role=button]{cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}blockquote,dl,p{margin:1em 0}ol,ul{list-style-type:none}ol li,ul li{margin:.3em 0;position:relative;padding-left:1.2em}ul li:before{content:"";position:absolute;left:0;top:.2em}ul ol li:before{display:inline;background:0 0;-webkit-transform:none;transform:none}ol{counter-reset:ol-level-1}ol li{padding-left:.7em}ol li:before{position:absolute;top:0;right:100%;left:auto}ol>li{counter-increment:ol-level-1;margin-left:1em}ol>li:before{content:counter(ol-level-1) "."}ol>li>ol{counter-reset:ol-level-2}ol>li>ol>li{counter-increment:ol-level-2;margin-left:1.8em}ol>li>ol>li:before{content:counter(ol-level-1) "." counter(ol-level-2) "."}ol>li>ol>li>ol{counter-reset:ol-level-3}ol>li>ol>li>ol>li{counter-increment:ol-level-3;margin-left:2.7em}ol>li>ol>li>ol>li:before{content:counter(ol-level-1) "." counter(ol-level-2) "." counter(ol-level-3) "."}blockquote{padding:.5em 0 .5em 2em;border-left:.1rem solid currentColor}dt{margin-bottom:.5em}dd{margin-bottom:1.2em;font-style:italic}pre{white-space:pre-wrap}*{-webkit-box-sizing:border-box;box-sizing:border-box}.outer,body,html{height:100%}.outer{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.main-content{-webkit-box-flex:1;-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto}.wrapper{padding:0 4%}p{font-size:1.1rem}.icons{width:20rem;display:block}footer,header{-webkit-box-flex:0;-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}footer{background:#ccc}header{background:#eee}.main-menu,footer,header{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}@media print{*,:after,:before{background:0 0!important;color:#000!important;-webkit-box-shadow:none!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999}thead{display:table-header-group}blockquote,img,pre,tr{page-break-inside:avoid}img{max-width:100%!important}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
