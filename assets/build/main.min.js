"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var s=0;s<e.length;s++){var i=e[s];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function _createClass(t,e,s){return e&&_defineProperties(t.prototype,e),s&&_defineProperties(t,s),t}$(document).on("click",".button--basket",function(){$(this).hasClass("animate")||($(this).addClass("animate"),$(this).addClass("button--check"),setTimeout(function(){$(this).removeClass("button--check"),$(this).removeClass("animate")}.bind(this),2e3))}),window.addEventListener("load",function(){$(".hr-sect").length&&$(".hr-pagination__step").click(function(){var t=$(this);if(!t.hasClass("is-active")){t.closest(".hr-sect").find(".hr-pagination__step").removeClass("is-active").removeClass("button"),t.addClass("is-active").addClass("button"),t.attr("data-index");var e=t.closest(".hr-sect").find(".hr-slider-slide");e.removeClass("is-active"),e.each(function(t,e){$(this).attr("data-index")==$(".hr-pagination__step.is-active").attr("data-index")&&$(this).addClass("is-active")})}})}),function(){var t=document.getElementById("menu-button");t.addEventListener("click",function(){t.classList.toggle("opened")}),window.onresize=function(){t.classList.remove("opened")},window.onscroll=function(){t.classList.remove("opened")}}(),function(){var t=function(){function a(t,e,s,i){if(_classCallCheck(this,a),void 0===t)return!1;this._self=t,this._title=this._self.querySelectorAll("."+e)[0],this._products=this._self.querySelectorAll("."+s)[0],this.preloader=this._self.querySelectorAll("."+i)[0]}return _createClass(a,[{key:"_cleanProducts",value:function(){this._products.innerHTML=""}},{key:"playPreloader",value:function(){this.preloader.classList.add("preloader--active")}},{key:"stopPreloader",value:function(){this.preloader.classList.remove("preloader--active")}},{key:"updateTitle",value:function(t){this._title.innerHTML=t,this._title.setAttribute("data-name",t)}},{key:"updateListProducts",value:function(t){this._products.innerHTML=t}},{key:"addProducts",value:function(t){this._products.insertAdjacentHTML("beforeend",t)}}]),a}(),e=function(){function i(t,e,s){return _classCallCheck(this,i),void 0!==t&&(void 0!==e&&(void 0!==s&&(this._containerBrands=t,this._brandItem=this._containerBrands.querySelectorAll(".catalog-nav__controls-link"),this._containerFilter=e,this._filterItem=this._containerFilter.querySelectorAll(".catalog-filter__col-btn"),this.searchItem=this._containerFilter.querySelectorAll(".catalog-filter__form")[0],this._activeClass="is-active",this._sortTypeAsc={class:"sort-down",dataSort:"asc"},this._sortTypeDesc={class:"sort-up",dataSort:"desc"},this._containerMore=s,this.timeOutAjax,void this.init())))}return _createClass(i,[{key:"_cleanClassFilterAll",value:function(){var s=this;this._filterItem.forEach(function(t){var e=t.closest(".catalog-filter__col");t.classList.remove(s._activeClass),t.classList.remove(s._sortTypeAsc.class),e.removeAttribute("data-sort")})}},{key:"_addClassFilter",value:function(t){var e=t.closest(".catalog-filter__col");console.log(t),t.classList.add(this._activeClass),t.classList.add(this._sortTypeAsc.class),e.setAttribute("data-sort",this._sortTypeAsc.dataSort)}},{key:"_toogleSort",value:function(t){var e=t.closest(".catalog-filter__col");t.classList.contains(this._sortTypeAsc.class)?(t.classList.remove(this._sortTypeAsc.class),t.classList.add(this._sortTypeDesc.class),e.setAttribute("data-sort",this._sortTypeDesc.dataSort)):(t.classList.remove(this._sortTypeDesc.class),t.classList.add(this._sortTypeAsc.class),e.setAttribute("data-sort",this._sortTypeAsc.dataSort))}},{key:"_selectBrand",value:function(t){t.classList.contains("is-active")||(this._brandItem.forEach(function(t){t.classList.remove("is-active")}),t.classList.add("is-active"))}},{key:"_queryFormation",value:function(t,e){clearTimeout(this.timeOutAjax);var s,i,a=[],o=this.searchItem.getElementsByTagName("input")[0];this._brandItem.forEach(function(t){t.classList.contains("is-active")&&(a.push("brand="+t.getAttribute("data-brand")),s=t.getAttribute("data-brand"))}),this._filterItem.forEach(function(t){var e=t.closest(".catalog-filter__col");t.classList.contains("is-active")&&(a.push("sort="+e.getAttribute("data-sort")),a.push("sortType="+e.getAttribute("data-filter")))}),""!==o.value&&a.push("search="+o.value),i="?"+a.join("&"),i=encodeURI(i),c.setHistory(i,s);var n=new l("test.json","get",t);void 0===e?n.send():(r.playPreloader(),this.timeOutAjax=setTimeout(function(){n.send()},e)),console.log(i)}},{key:"updateStateFilterFromUrl",value:function(e){var s=this;void 0!==e[0]?this._brandItem.forEach(function(t){t.getAttribute("data-brand")===e[0][1]&&s._selectBrand(t)}):this._selectBrand(this._brandItem[0]),void 0!==e[2]?this._filterItem.forEach(function(t){t.closest(".catalog-filter__col").getAttribute("data-filter")===e[2][1]&&(s._cleanClassFilterAll(),s._addClassFilter(t),t.closest(".catalog-filter__col").setAttribute("data-sort",e[1][1]),"asc"===e[1][1]?(t.classList.add(s._sortTypeAsc.class),t.classList.remove(s._sortTypeDesc.class)):(t.classList.remove(s._sortTypeAsc.class),t.classList.add(s._sortTypeDesc.class)))}):this._filterItem.forEach(function(t){"name"===t.closest(".catalog-filter__col").getAttribute("data-filter")&&(s._cleanClassFilterAll(),s._addClassFilter(t))}),void 0!==e[3]?(console.log(e[3][1]),s.searchItem.getElementsByTagName("input")[0].value=e[3][1]):s.searchItem.getElementsByTagName("input")[0].value=""}},{key:"init",value:function(){var e=this;this._filterItem.forEach(function(t){t.addEventListener("click",function(){t.classList.contains(e._activeClass)?e._toogleSort(this):(e._cleanClassFilterAll(),e._addClassFilter(this)),e._queryFormation(!0)})}),this._brandItem.forEach(function(t){t.addEventListener("click",function(t){t.preventDefault(),this.classList.contains("is-active")||(e._selectBrand(this),e._queryFormation(!0))})}),this.searchItem.getElementsByTagName("input")[0].addEventListener("input",function(){e._queryFormation(!0,1e3)}),this._containerMore.querySelectorAll(".catalog__more-button")[0].addEventListener("click",function(t){t.preventDefault(),e._queryFormation(!1)})}}]),i}(),s=function(){function t(){_classCallCheck(this,t),this._url,this._historyObj=window.history,this.init()}return _createClass(t,[{key:"setHistory",value:function(t,e){e===this._historyObj.state?this._historyObj.replaceState(e,e,t):this._historyObj.pushState(e,e,t)}},{key:"_readHistory",value:function(){var t=document.location.href,e=decodeURI(t).split("?"),s=[];void 0!==e[1]?(e[1].split("&").forEach(function(t){s.push(t.split("="))}),console.log(s),i.updateStateFilterFromUrl(s),new l("test.json","get",!0).send()):(i.updateStateFilterFromUrl([]),new l("test.json","get",!0).send())}},{key:"init",value:function(){window.addEventListener("popstate",this._readHistory)}}]),t}(),l=function(){function i(t,e,s){_classCallCheck(this,i),this._url=t,this._type=e,this._productUpdate=s,this.ajax=new XMLHttpRequest}return _createClass(i,[{key:"_progress",value:function(){r.playPreloader()}},{key:"_complete",value:function(){var t=JSON.parse(this.response);!0===productUpdate?(r.updateTitle(t.title),r.updateListProducts(t.elements)):r.addProducts(t.elements),r.stopPreloader(),console.log(t)}},{key:"_completeUpdatePrpoducts",value:function(){var t=JSON.parse(this.response);r.updateTitle(t.title),r.updateListProducts(t.elements),r.stopPreloader(),console.log(t)}},{key:"_completeAddProducts",value:function(){var t=JSON.parse(this.response);r.addProducts(t.elements),r.stopPreloader(),console.log(t)}},{key:"send",value:function(t){var e=this._productUpdate,s=this;this.ajax.addEventListener("progress",this._progress,!1),this.ajax.addEventListener("load",!0===e?s._completeUpdatePrpoducts:s._completeAddProducts,!1),"get"===this._type.toLowerCase()?(this.ajax.open(this._type,this._url),this.ajax.send(),console.log("get")):"post"===this._type.toLowerCase()?console.log("post"):console.log("Error")}}]),i}(),r=new t(document.querySelectorAll(".catalog")[0],"catalog__title","catalog__product","preloader"),i=new e(document.querySelectorAll(".catalog-nav__controls")[0],document.querySelectorAll(".catalog-filter")[0],document.querySelectorAll(".catalog__more")[0]),c=new s;window.filter=i}(),function(){var t=$("header"),e=$(".main-content"),s=t.height();$(window).on("load scroll",function(){$(this).scrollTop()>s?(t.addClass("fixed"),e.css({"padding-top":s})):(t.removeClass("fixed"),e.css({"padding-top":0}))})}(),$(".footer__col-title").on("click",function(t){t.preventDefault(),$(this).closest(".footer__col").find(".footer__col-list").slideToggle(300)}),window.addEventListener("load",function(){if($(".catalog-nav__controls").length){var t=function(){i=s.position().left,o=s.position().top,s.innerWidth(),s.innerHeight(),a.css({left:i,top:o,width:0,height:0})},e=$(".catalog-nav__controls-link"),s=($(".catalog-nav__controls-list"),$(".catalog-nav__controls-item"),$(".catalog-nav__controls-link.is-active")),a=$(".catalog-nav__hover"),i=s.position().left,o=s.position().top,n=(s.innerWidth(),s.innerHeight(),!1);e.hover(function(){var t=$(this).position().left,e=$(this).position().top,s=$(this).innerWidth(),i=$(this).innerHeight();a.css({left:t,top:e,width:s,height:i}),n=!1},function(){setTimeout(function(){n&&a.css({left:i,top:o,width:0,height:0})},1e3),n=!0}),$(window).resize(function(){t()}),t()}}),window.addEventListener("load",function(){$(".delivery__form-input").focusout(function(){""!==$(this).val()?$(this).parent().addClass("value"):$(this).parent().removeClass("value")})}),function(){var t=document.getElementById("scene");if(null!=t)new Parallax(t)}(),$(document).on("click",".slide-info__button",function(){$(this).closest(".slide-info").find(".slide-info__button").toggleClass("is-active"),$(this).closest(".slide-info").find(".slide-info__content").slideToggle(300)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
