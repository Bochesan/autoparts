"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var s=0;s<e.length;s++){var i=e[s];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function _createClass(t,e,s){return e&&_defineProperties(t.prototype,e),s&&_defineProperties(t,s),t}$(document).on("click",".product-row__button",function(){$(this).hasClass("animate")||($(this).addClass("animate"),$(this).addClass("button--check"),setTimeout(function(){$(this).removeClass("button--check"),$(this).removeClass("animate")}.bind(this),2e3))}),window.addEventListener("load",function(){$(".hr-sect").length&&$(".hr-pagination__step").click(function(){var t=$(this);if(!t.hasClass("is-active")){t.closest(".hr-sect").find(".hr-pagination__step").removeClass("is-active").removeClass("button"),t.addClass("is-active").addClass("button"),t.attr("data-index");var e=t.closest(".hr-sect").find(".hr-slider-slide");e.removeClass("is-active"),e.each(function(t,e){$(this).attr("data-index")==$(".hr-pagination__step.is-active").attr("data-index")&&$(this).addClass("is-active")})}})}),function(){var t=document.getElementById("menu-button");t.addEventListener("click",function(){t.classList.toggle("opened")}),window.onresize=function(){t.classList.remove("opened")},window.onscroll=function(){t.classList.remove("opened")}}(),function(){var t=function(){function a(t,e,s,i){if(_classCallCheck(this,a),void 0===t)return!1;this._self=t,this._title=this._self.querySelectorAll("."+e)[0],this._products=this._self.querySelectorAll("."+s)[0],this.preloader=this._self.querySelectorAll("."+i)[0]}return _createClass(a,[{key:"_cleanProducts",value:function(){this._products.innerHTML=""}},{key:"playPreloader",value:function(){this.preloader.classList.add("preloader--active")}},{key:"stopPreloader",value:function(){this.preloader.classList.remove("preloader--active")}},{key:"updateTitle",value:function(t){this._title.innerHTML=t}},{key:"updateListProducts",value:function(t){this._products.innerHTML=t}},{key:"addProducts",value:function(t){this._products.insertAdjacentHTML("beforeend",t)}}]),a}(),e=function(){function s(t,e){return _classCallCheck(this,s),void 0!==t&&(void 0!==e&&(this._containerBrands=t,this._brandItem=this._containerBrands.querySelectorAll(".catalog-nav__controls-link"),this._containerFilter=e,this._filterItem=this._containerFilter.querySelectorAll(".catalog-filter__col-btn"),this.searchItem=this._containerFilter.querySelectorAll(".catalog-filter__form")[0],this._activeClass="is-active",this._sortTypeAsc={class:"sort-down",dataSort:"asc"},this._sortTypeDesc={class:"sort-up",dataSort:"desc"},this.timeOutAjax,void this.init()))}return _createClass(s,[{key:"_cleanClassFilterAll",value:function(){var s=this;this._filterItem.forEach(function(t){var e=t.closest(".catalog-filter__col");t.classList.remove(s._activeClass),t.classList.remove(s._sortTypeAsc.class),e.removeAttribute("data-sort")})}},{key:"_addClassFilter",value:function(t){var e=t.closest(".catalog-filter__col");t.classList.add(this._activeClass),t.classList.add(this._sortTypeAsc.class),e.setAttribute("data-sort",this._sortTypeAsc.dataSort)}},{key:"_toogleSort",value:function(t){var e=t.closest(".catalog-filter__col");t.classList.contains(this._sortTypeAsc.class)?(t.classList.remove(this._sortTypeAsc.class),t.classList.add(this._sortTypeDesc.class),e.setAttribute("data-sort",this._sortTypeDesc.dataSort)):(t.classList.remove(this._sortTypeDesc.class),t.classList.add(this._sortTypeAsc.class),e.setAttribute("data-sort",this._sortTypeAsc.dataSort))}},{key:"_selectBrand",value:function(t){t.classList.contains("is-active")||(this._brandItem.forEach(function(t){t.classList.remove("is-active")}),t.classList.add("is-active"))}},{key:"_queryFormation",value:function(t){clearTimeout(this.timeOutAjax);var e,s,i=[],a=this.searchItem.getElementsByTagName("input")[0];this._brandItem.forEach(function(t){t.classList.contains("is-active")&&(i.push("brand="+t.getAttribute("data-brand")),e=t.getAttribute("data-brand"))}),this._filterItem.forEach(function(t){var e=t.closest(".catalog-filter__col");t.classList.contains("is-active")&&(i.push("sort="+e.getAttribute("data-sort")),i.push("sortType="+e.getAttribute("data-filter")))}),""!==a.value&&i.push("search="+a.value),s="?"+i.join("&"),new n(s).setHistory(e);var o=new l("test.json","get");void 0===t?o.send():(r.playPreloader(),this.timeOutAjax=setTimeout(function(){o.send()},t)),console.log(s)}},{key:"init",value:function(){var e=this;this._filterItem.forEach(function(t){t.addEventListener("click",function(){t.classList.contains(e._activeClass)?e._toogleSort(this):(e._cleanClassFilterAll(),e._addClassFilter(this)),e._queryFormation()})}),this._brandItem.forEach(function(t){t.addEventListener("click",function(t){t.preventDefault(),this.classList.contains("is-active")||(e._selectBrand(this),e._queryFormation())})}),this.searchItem.getElementsByTagName("input")[0].addEventListener("input",function(){e._queryFormation(1e3)})}}]),s}(),n=function(){function e(t){_classCallCheck(this,e),this._url=t,this._historyObj=window.history}return _createClass(e,[{key:"setHistory",value:function(t){t===this._historyObj.state?this._historyObj.replaceState(t,t,this._url):this._historyObj.pushState(t,t,this._url)}},{key:"readHistory",value:function(t){}}]),e}(),l=function(){function s(t,e){_classCallCheck(this,s),this._url=t,this._type=e,this.ajax=new XMLHttpRequest}return _createClass(s,[{key:"_progress",value:function(){r.playPreloader()}},{key:"_complete",value:function(){var t=JSON.parse(this.response);r.updateTitle(t.title),r.updateListProducts(t.elements),r.stopPreloader(),console.log(t)}},{key:"send",value:function(t){this.ajax.addEventListener("progress",this._progress,!1),this.ajax.addEventListener("load",this._complete,!1),"get"===this._type.toLowerCase()?(this.ajax.open(this._type,this._url),this.ajax.send(),console.log("get")):"post"===this._type.toLowerCase()?console.log("post"):console.log("Error")}}]),s}(),r=new t(document.querySelectorAll(".catalog")[0],"catalog__title","catalog__product","preloader"),s=new e(document.querySelectorAll(".catalog-nav__controls")[0],document.querySelectorAll(".catalog-filter")[0]);window.filter=s}(),$(".footer__col-title").on("click",function(t){t.preventDefault(),$(this).closest(".footer__col").find(".footer__col-list").slideToggle(300)}),window.addEventListener("load",function(){if($(".catalog-nav__controls").length){var t=function(){i=s.position().left,o=s.position().top,s.innerWidth(),s.innerHeight(),a.css({left:i,top:o,width:0,height:0})},e=$(".catalog-nav__controls-link"),s=($(".catalog-nav__controls-list"),$(".catalog-nav__controls-item"),$(".catalog-nav__controls-link.is-active")),a=$(".catalog-nav__hover"),i=s.position().left,o=s.position().top,n=(s.innerWidth(),s.innerHeight(),!1);e.hover(function(){var t=$(this).position().left,e=$(this).position().top,s=$(this).innerWidth(),i=$(this).innerHeight();a.css({left:t,top:e,width:s,height:i}),n=!1},function(){setTimeout(function(){n&&a.css({left:i,top:o,width:0,height:0})},1e3),n=!0}),$(window).resize(function(){t()}),t()}}),window.addEventListener("load",function(){$(".delivery__form-input").focusout(function(){""!==$(this).val()?$(this).parent().addClass("value"):$(this).parent().removeClass("value")})}),function(){var t=document.getElementById("scene");if(null!=t)new Parallax(t)}(),$(document).on("click",".slide-info__button",function(){$(this).closest(".slide-info").find(".slide-info__button").toggleClass("is-active"),$(this).closest(".slide-info").find(".slide-info__content").slideToggle(300)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
