"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var s=0;s<e.length;s++){var o=e[s];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function _createClass(t,e,s){return e&&_defineProperties(t.prototype,e),s&&_defineProperties(t,s),t}$(document).on("click",".product-row__button",function(){$(this).hasClass("animate")||($(this).addClass("animate"),$(this).addClass("button--check"),setTimeout(function(){$(this).removeClass("button--check"),$(this).removeClass("animate")}.bind(this),2e3))}),function(){var t=document.getElementById("menu-button");t.addEventListener("click",function(){t.classList.toggle("opened")}),window.onresize=function(){t.classList.remove("opened")},window.onscroll=function(){t.classList.remove("opened")}}(),function(){var t=function(){function o(t,e,s){_classCallCheck(this,o),this._self=t,this._title=this._self.querySelectorAll("."+e)[0],this._products=this._self.querySelectorAll("."+s)[0]}return _createClass(o,[{key:"_cleanProducts",value:function(){this._products.innerHTML=""}},{key:"_playPreloader",value:function(){}},{key:"_stopPreloader",value:function(){}},{key:"updateTitle",value:function(t){this._title.innerHTML=t}},{key:"updateListProducts",value:function(t){this._products.innerHTML=t}},{key:"addProducts",value:function(t){this._products.insertAdjacentHTML("beforeend",t)}}]),o}(),e=function(){function s(t,e){_classCallCheck(this,s),this._containerBrands=t,this._brandItem=this._containerBrands.querySelectorAll(".catalog-nav__controls-link"),this._containerFilter=e,this._filterItem=this._containerFilter.querySelectorAll(".catalog-filter__col-btn"),this.searchItem=this._containerFilter.querySelectorAll(".catalog-filter__form")[0],this._activeClass="is-active",this._sortTypeAsc={class:"sort-down",dataSort:"asc"},this._sortTypeDesc={class:"sort-up",dataSort:"desc"},this.init()}return _createClass(s,[{key:"_cleanClassFilterAll",value:function(){var s=this;this._filterItem.forEach(function(t){var e=t.closest(".catalog-filter__col");t.classList.remove(s._activeClass),t.classList.remove(s._sortTypeAsc.class),e.removeAttribute("data-sort")})}},{key:"_addClassFilter",value:function(t){var e=t.closest(".catalog-filter__col");t.classList.add(this._activeClass),t.classList.add(this._sortTypeAsc.class),e.setAttribute("data-sort",this._sortTypeAsc.dataSort)}},{key:"_toogleSort",value:function(t){var e=t.closest(".catalog-filter__col");t.classList.contains(this._sortTypeAsc.class)?(t.classList.remove(this._sortTypeAsc.class),t.classList.add(this._sortTypeDesc.class),e.setAttribute("data-sort",this._sortTypeDesc.dataSort)):(t.classList.remove(this._sortTypeDesc.class),t.classList.add(this._sortTypeAsc.class),e.setAttribute("data-sort",this._sortTypeAsc.dataSort))}},{key:"_selectBrand",value:function(t){t.classList.contains("is-active")||(this._brandItem.forEach(function(t){t.classList.remove("is-active")}),t.classList.add("is-active"))}},{key:"_queryFormation",value:function(){}},{key:"init",value:function(){var e=this;this._filterItem.forEach(function(t){t.addEventListener("click",function(){t.classList.contains(e._activeClass)?e._toogleSort(this):(e._cleanClassFilterAll(),e._addClassFilter(this)),e._queryFormation()})}),this._brandItem.forEach(function(t){t.addEventListener("click",function(t){t.preventDefault(),e._selectBrand(this)})}),this.searchItem.getElementsByTagName("input")[0].addEventListener("input",function(){console.log(this.value),e._queryFormation()})}}]),s}(),s=function(){function s(t,e){_classCallCheck(this,s),this._url=t,this._type=e,this.ajax=new XMLHttpRequest}return _createClass(s,[{key:"_progress",value:function(){}},{key:"_complete",value:function(){var t=JSON.parse(this.response);console.log(t)}},{key:"send",value:function(t){this.ajax.addEventListener("progress",this._progress,!1),this.ajax.addEventListener("load",this._complete,!1),"get"===this._type.toLowerCase()?(this.ajax.open(this._type,this._url),this.ajax.send(),console.log("get")):"post"===this._type.toLowerCase()?console.log("post"):console.log("Error")}}]),s}(),o=(new t(document.querySelectorAll(".catalog")[0],"catalog__title","catalog__container"),new s("test.json","get")),i=new e(document.querySelectorAll(".catalog-nav__controls")[0],document.querySelectorAll(".catalog-filter")[0]);o.send({data:1}),window.filter=i}(),$(".footer__col-title").on("click",function(t){t.preventDefault(),$(this).closest(".footer__col").find(".footer__col-list").slideToggle(300)}),window.addEventListener("load",function(){var t=$(".catalog-nav__controls-link"),e=($(".catalog-nav__controls-list"),$(".catalog-nav__controls-item"),$(".catalog-nav__controls-link.is-active")),i=$(".catalog-nav__hover"),s=e.position().left,o=e.position().top,n=(e.innerWidth(),e.innerHeight(),!1);function a(){s=e.position().left,o=e.position().top,e.innerWidth(),e.innerHeight(),i.css({left:s,top:o,width:0,height:0})}t.hover(function(){var t=$(this).position().left,e=$(this).position().top,s=$(this).innerWidth(),o=$(this).innerHeight();i.css({left:t,top:e,width:s,height:o}),n=!1},function(){setTimeout(function(){n&&i.css({left:s,top:o,width:0,height:0})},1e3),n=!0}),$(window).resize(function(){a()}),a()}),function(){var t=document.getElementById("scene");new Parallax(t)}(),$(document).on("click",".product-row__info-button",function(){$(this).closest(".product-row").find(".product-row__info-button").toggleClass("is-active"),$(this).closest(".product-row").find(".product-row__info-content").slideToggle(300)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
