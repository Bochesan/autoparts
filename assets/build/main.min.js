"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var o=0;o<e.length;o++){var n=e[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function _createClass(t,e,o){return e&&_defineProperties(t.prototype,e),o&&_defineProperties(t,o),t}$(document).on("click",".product-row__button",function(){$(this).hasClass("animate")||($(this).addClass("animate"),$(this).addClass("button--check"),setTimeout(function(){$(this).removeClass("button--check"),$(this).removeClass("animate")}.bind(this),2e3))}),function(){var t=document.getElementById("menu-button");t.addEventListener("click",function(){t.classList.toggle("opened")}),window.onresize=function(){t.classList.remove("opened")},window.onscroll=function(){t.classList.remove("opened")}}(),function(){var t=function(){function n(t,e,o){_classCallCheck(this,n),this._self=t,this._title=this._self.querySelectorAll("."+e)[0],this._products=this._self.querySelectorAll("."+o)[0]}return _createClass(n,[{key:"_cleanProducts",value:function(){this._products.innerHTML=""}},{key:"_playPreloader",value:function(){}},{key:"_stopPreloader",value:function(){}},{key:"updateTitle",value:function(t){this._title.innerHTML=t}},{key:"updateListProducts",value:function(t){this._products.innerHTML=t}},{key:"addProducts",value:function(t){this._products.insertAdjacentHTML("beforeend",t)}}]),n}(),e=function(){function o(t,e){_classCallCheck(this,o),this._url=t,this._type=e,this.ajax=new XMLHttpRequest}return _createClass(o,[{key:"_progress",value:function(){}},{key:"_complete",value:function(){var t=JSON.parse(this.response);console.log(t)}},{key:"send",value:function(t){this.ajax.addEventListener("progress",this._progress,!1),this.ajax.addEventListener("load",this._complete,!1),"get"===this._type.toLowerCase()?(this.ajax.open(this._type,this._url),this.ajax.send(),console.log("get")):"post"===this._type.toLowerCase()?console.log("post"):console.log("Error")}}]),o}(),o=new t(document.querySelectorAll(".catalog")[0],"catalog__title","catalog__container");new e("test.json","get").send({data:1}),window.catalodTest=o}(),$(".footer__col-title").on("click",function(t){t.preventDefault(),$(this).closest(".footer__col").find(".footer__col-list").slideToggle(300)}),window.addEventListener("load",function(){var t=$(".catalog-nav__controls-link"),e=($(".catalog-nav__controls-list"),$(".catalog-nav__controls-item"),$(".catalog-nav__controls-link.is-active")),i=$(".catalog-nav__hover"),o=e.position().left,n=e.position().top,s=(e.innerWidth(),e.innerHeight(),!1);function c(){o=e.position().left,n=e.position().top,e.innerWidth(),e.innerHeight(),i.css({left:o,top:n,width:0,height:0})}t.hover(function(){var t=$(this).position().left,e=$(this).position().top,o=$(this).innerWidth(),n=$(this).innerHeight();i.css({left:t,top:e,width:o,height:n}),s=!1},function(){setTimeout(function(){s&&i.css({left:o,top:n,width:0,height:0})},1e3),s=!0}),$(window).resize(function(){c()}),c()}),function(){var t=document.getElementById("scene");new Parallax(t)}(),$(document).on("click",".product-row__info-button",function(){$(this).closest(".product-row").find(".product-row__info-button").toggleClass("is-active"),$(this).closest(".product-row").find(".product-row__info-content").slideToggle(300)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
